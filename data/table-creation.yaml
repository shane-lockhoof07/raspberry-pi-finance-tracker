apiVersion: batch/v1
kind: Job
metadata:
  name: db-migration
  namespace: finances-app
spec:
  template:
    spec:
      containers:
      - name: migration
        image: postgres:14-alpine
        command: ["sh", "-c"]
        args:
        - |
          # Use hardcoded password for simplicity in this migration job
          # In production, you should use more secure methods
          
          # Connect as postgres user to create proper database and user
          echo "Creating user and database with correct credentials..."
          
          # Check if the user 'finances' exists, create if not
          PGPASSWORD=postgres-password psql -h postgres.postgres-db.svc.cluster.local -U postgres -t -c "SELECT 1 FROM pg_roles WHERE rolname='finances'" | grep -q 1
          if [ $? -ne 0 ]; then
            echo "Creating user 'finances'..."
            PGPASSWORD=postgres-password psql -h postgres.postgres-db.svc.cluster.local -U postgres -c "CREATE USER finances WITH PASSWORD 'postgres-password';"
          else
            echo "User 'finances' already exists."
          fi
          
          # Check if database 'finances' exists, create if not
          PGPASSWORD=postgres-password psql -h postgres.postgres-db.svc.cluster.local -U postgres -t -c "SELECT 1 FROM pg_database WHERE datname='finances'" | grep -q 1
          if [ $? -ne 0 ]; then
            echo "Creating database 'finances'..."
            PGPASSWORD=postgres-password psql -h postgres.postgres-db.svc.cluster.local -U postgres -c "CREATE DATABASE finances WITH OWNER finances;"
          else
            echo "Database 'finances' already exists."
          fi
          
          # Grant privileges
          echo "Granting privileges on database 'finances' to user 'finances'..."
          PGPASSWORD=postgres-password psql -h postgres.postgres-db.svc.cluster.local -U postgres -c "GRANT ALL PRIVILEGES ON DATABASE finances TO finances;"
          
          # Create tables in the finances database
          echo "Creating tables in the 'finances' database..."
          PGPASSWORD=postgres-password psql -h postgres.postgres-db.svc.cluster.local -U finances -d finances -c "
          CREATE TABLE IF NOT EXISTS transactions (
              id TEXT PRIMARY KEY,
              card_issuer TEXT,
              date DATE,
              month INTEGER,
              day INTEGER,
              year INTEGER,
              amount NUMERIC(10,2),
              vendor TEXT,
              category TEXT,
              line_id INTEGER
          );

          ALTER TABLE transactions
          ADD CONSTRAINT unique_transaction 
          UNIQUE (card_issuer, line_id, date, vendor);
          
          CREATE TABLE IF NOT EXISTS categories (
              name TEXT PRIMARY KEY,
              rank INTEGER
          );
          
          CREATE TABLE IF NOT EXISTS budget (
              category TEXT PRIMARY KEY,
              amount NUMERIC(10,2)
          );
          
          CREATE TABLE IF NOT EXISTS income (
              year INTEGER,
              month TEXT,
              amount NUMERIC(10,2),
              PRIMARY KEY (year, month)
          );
          
          CREATE TABLE IF NOT EXISTS rent (
              year INTEGER,
              month TEXT,
              amount NUMERIC(10,2),
              PRIMARY KEY (year, month)
          );
          
          CREATE TABLE IF NOT EXISTS money_transfers (
              id TEXT PRIMARY KEY,
              date DATE,
              year TEXT,
              month INTEGER,
              amount NUMERIC(10,2),
              type TEXT,
              description TEXT
          );
          
          CREATE TABLE IF NOT EXISTS net_worth (
              year TEXT,
              month TEXT,
              savings NUMERIC(10,2),
              investments NUMERIC(10,2),
              PRIMARY KEY (year, month)
          );
                              
          CREATE TABLE IF NOT EXISTS misformatted_transactions (
              id INTEGER PRIMARY KEY,
              data JSONB
          );
          
          CREATE TABLE IF NOT EXISTS stock_vesting_schedule (
              id SERIAL PRIMARY KEY,
              vesting_date DATE,
              shares INTEGER
          );
          
          CREATE INDEX idx_stock_vesting_date ON stock_vesting_schedule(vesting_date);
          
          CREATE TABLE IF NOT EXISTS money_schedule (
              id SERIAL PRIMARY KEY,
              date DATE,
              source TEXT,
              amount NUMERIC(10,2)
          );
          "
          echo "Database setup completed successfully."
      restartPolicy: Never
  backoffLimit: 1
